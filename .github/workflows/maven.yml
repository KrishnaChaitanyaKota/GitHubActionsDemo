# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI-CD Deployment for GitHubActionsDemo

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
	APP_NAME : ${{ secrets.APP_NAME }}
	SERVER_PORT : ${{ secrets.SERVER_PORT }}
 
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: check java Version
      run: java -version
    - name: Build with Maven
      run: mvn clean install
    - name: check docker version
      run: docker --version
    - name: Set Application Version Variable
      run: |
          env
          export APPLICATION_VERSION="$APPLICATION_NAME-${{ github.sha }}"
          echo $APPLICATION_VERSION
    - name: manual docker build
      run: docker build -t krishnachaitanya/springbootwithgithubactions .
    # This is not recommeneded use Docker Login existing  action   
    - name: Logon to Docker manually
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Login to Docker Hub with existing github action
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v5  
      with:
        image: krishnachaitanya/springbootwithgithubactions
        tags: latestkc
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}



